
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://zzuloriouwirmaxateto.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inp6dWxvcmlvdXdpcm1heGF0ZXRvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI1ODU5OTUsImV4cCI6MjA1ODE2MTk5NX0._hLpk3HrvT4X5h2mzZ5XHfhzQFFOndLA_Zl0RFfuybg";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to create chart data
export async function createOrGetChartData() {
  const { data: existingData } = await supabase
    .from('chart_data')
    .select('*')
    .limit(1);

  if (existingData && existingData.length > 0) {
    console.log('Chart data already exists');
    return;
  }

  // Sample chart data categories
  const categories = [
    'Q1 2023', 'Q2 2023', 'Q3 2023', 'Q4 2023', 
    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
  ];
  
  // Sample chart data metrics
  const labels = [
    'Revenue', 'Calls', 'Resolution Rate', 'Customer Satisfaction', 
    'Call Duration', 'Agent Performance'
  ];
  
  // Generate sample data
  const sampleData = [];
  
  for (const label of labels) {
    for (const category of categories) {
      // Generate random value based on the label
      let value = 0;
      let chartType = 'all';
      
      switch (label) {
        case 'Revenue':
          value = Math.floor(Math.random() * 10000) + 5000;
          break;
        case 'Calls':
          value = Math.floor(Math.random() * 500) + 100;
          break;
        case 'Resolution Rate':
          value = Math.floor(Math.random() * 30) + 70;
          break;
        case 'Customer Satisfaction':
          value = Math.floor(Math.random() * 2) + 3;
          break;
        case 'Call Duration':
          value = Math.floor(Math.random() * 10) + 2;
          break;
        case 'Agent Performance':
          value = Math.floor(Math.random() * 20) + 80;
          break;
        default:
          value = Math.floor(Math.random() * 100);
      }
      
      sampleData.push({
        label,
        category,
        value,
        chart_type: chartType
      });
    }
  }
  
  // Batch insert data into chart_data table
  const batchSize = 50;
  for (let i = 0; i < sampleData.length; i += batchSize) {
    const batch = sampleData.slice(i, i + batchSize);
    
    const { error } = await supabase
      .from('chart_data')
      .insert(batch);
    
    if (error) {
      console.error('Error inserting chart data:', error);
      return;
    }
  }
  
  console.log('Chart data created successfully');
}
